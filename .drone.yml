kind: pipeline
type: docker
name: test-bootstrap

global-variables:
  snark-worker-image: &snark-worker-image openmina/mina-snark-worker-prover:0.0.9

trigger:
  branch:
  - master
  - develop
  - feat/graphql

environment:
  REPLAYER_ID: 12D3KooWETkiRaHCdztkbmrWQTET9HMWimQPx5sH5pLSRZNxRsjw

  OPENMINA1_SK: 5KJKg7yAbYAQcNGWcKFf2C4ruJxwrHoQvsksU16yPzFzXHMsbMc
  OPENMINA1_ID: 2axsdDAiiZee7hUsRPMtuyHt94UMrvJmMQDhDjKhdRhgqkMdy8e
  OPENMINA1_LIBP2P_ID: 12D3KooWF9a6eg6ZVx9Z8PLyqdyVdtxrEzz2Ejc6LXZzG8pH52qL
  OPENMINA1_SNARKER_KEY: B62qqYvLLtTMQtHxRfuzZK21AJrqFE8Zq9Cyk3wtjegiTRn5soNQA9A

  OPENMINA2_SK: 5JgkZGzHPC2SmQqRGxwbFjZzFMLvab5tPwkiN29HX9Vjc9rtwV4
  OPENMINA2_ID: 2bpACUcRh2u7WJ3zSBRWZZvQMTMofYr9SGQgcP2YKzwwDKanNAy
  OPENMINA2_SNARKER_KEY: B62qrV28zSmLjxMZP1jKRSEFsajPGdFRukbvnXzRKyDmUBNVvCH7w9o

  OPENMINA3_SK: 5KWkmiairnLJjtvqEatpb4grLEG8oZjFp7ye4ehphjXRGrgsuH8
  OPENMINA3_ID: 2aQA3swTKVf16YgLXZS7TizU7ASgZ8LidEgyHhChpDinrvM9NMi
  OPENMINA3_SNARKER_KEY: B62qkgVSEnzTabaFJzZcG1pgXorRLJREJFvchGya6UGoKTmFx5AWAK6

steps:

  - name: submodules
    image: alpine/git
    environment:
      GITHUB_AUTH_TOKEN:
        from_secret: github_auth_token
    commands:
      - git config --global url."https://$${GITHUB_AUTH_TOKEN}:@github.com/".insteadOf "https://github.com/"
      - git config --global --add safe.directory /drone/src
      - git config --global --add safe.directory /drone/src/ledger
      - git config --global --add safe.directory /drone/src/mina-p2p-messages-rs
      - git config --global --add safe.directory /drone/src/deps/algebra
      - git config --global --add safe.directory /drone/src/deps/proof-systems
      - git config --global --add safe.directory /drone/src/deps/redux-rs
      - git submodule update --init --recursive
      - rm ~/.gitconfig

  - name: prepare-snark-worker
    image: *snark-worker-image
    commands:
      - cp /usr/local/bin/mina cli/bin/

  - name: build
    image: rust:1.71-buster
    commands:
      - apt-get update && apt-get install -y libssl-dev libjemalloc-dev
      - rustup update nightly-2023-06-01 && rustup default nightly-2023-06-01
      - rustup component add rustfmt
      - cargo test --release -p cli
      - cargo build --release -p cli --bin openmina

  - name: replayer
    image: vladsimplestakingcom/bootstrap-rr:graphql
    pull: always
    detach: true
    environment:
      # 12D3KooWETkiRaHCdztkbmrWQTET9HMWimQPx5sH5pLSRZNxRsjw
      OPENMINA_P2P_SEC_KEY: 5JDRBqXfHm4Xne1QKUJyg9FKRfwN6gtduZb7nVYHg2F1BmwPynT
    commands:
      - RUST_LOG=info openmina-bootstrap-sandbox --path='/tmp/mina-record' --listen='/ip4/0.0.0.0/tcp/8302' replay 234

  # - name: empty
  #   image: vladsimplestakingcom/bootstrap-rr:graphql
  #   pull: always
  #   detach: true
  #   environment:
  #     # 12D3KooWBk4vJzxBZcwDXEae91mPLxJZks2pUCpDJP1zmCjx95ai
  #     OPENMINA_P2P_SEC_KEY: 5KRTpP4DczohhCkYVSZCHNzEF2t8Lig1EwbUPkR7TT2b4gMYYer
  #     RUST_LOG: info
  #   commands:
  #     - openmina-bootstrap-sandbox --listen='/ip6/::/tcp/8302' --listen='/ip4/0.0.0.0/tcp/8302' empty

  # - name: ocaml1
  #   image: minaprotocol/mina-daemon:2.0.0rampup3-bfd1009-buster-berkeley
  #   detach: true
  #   environment:
  #     MINA_LIBP2P_PASS: _
  #   commands:
  #     - curl https://raw.githubusercontent.com/MinaProtocol/mina/bfd1009/genesis_ledgers/berkeley.json -o /berkeley.json
  #     - mkdir /key && chmod 700 /key
  #     - echo '{"box_primitive":"xsalsa20poly1305","pw_primitive":"argon2i","nonce":"6MNkZnzpgwLHBA28BLzmEcxv4uAHqv52498evUP","pwsalt":"9YzR5Eb7faseS8XgE74Q7KbmrKs7","pwdiff":[134217728,6],"ciphertext":"7DrdaPt1vmgRVT8L4LcHyq6WSwzzxK1XfnZAwwtwWZRUpaChfetKyKrBBSuW3X99QUMebL8gCmuW9yq9k6CbpByvfWuRNEnejGHtXNrmyjJdoU5fd656CFjs4kXPUbpDLLwf4PD4axa89TDh5xCPENsqmigE38UuLn42TNix8sqyyGuVnyNXvP2pjDKKVU6rWatw83w8ijP97HXzeV9vwq2YudRFr4URdi11hiyVjvQ5DCmF3yNYJs5RgJw94AteZqfr2CH1FsdRA3nhiBLavreFZ53WEJnxJ69xt"}' > /key/key
  #     - echo '12D3KooWKLzGWSdFAQGEAtrHan1TTwu7idagcZ83X6MXWfUJNiTU' > /key/key.peerid
  #     - chmod 600 /key/*
  #     - apt-get update && apt-get install -y netcat
  #     - netcat -l -p 9000 || true
  #     - mina daemon --external-port 8302 --config-file /berkeley.json --libp2p-keypair /key/key
  #         --log-level Debug --insecure-rest-server
  #         --peer /dns4/empty/tcp/8302/p2p/12D3KooWBk4vJzxBZcwDXEae91mPLxJZks2pUCpDJP1zmCjx95ai
  #         --direct-peer /dns4/openmina1/tcp/10000/p2p/$OPENMINA1_LIBP2P_ID

  - name: openmina1
    image: *snark-worker-image
    detach: true
    commands:
      - mkdir test_ledgers
      - curl https://raw.githubusercontent.com/openmina/openmina-poc/3a81bc7/test_ledgers/jx5k7xf3L2aof821PQWumABQ793rhEis5kRb8YUmJWTHKtEJ5nb -o test_ledgers/jx5k7xf3L2aof821PQWumABQ793rhEis5kRb8YUmJWTHKtEJ5nb
      - target/release/openmina node -p 10000 --run-snarker $OPENMINA1_SNARKER_KEY -s $OPENMINA1_SK
          --peers /dns4/replayer/tcp/8302/p2p/$REPLAYER_ID /$OPENMINA2_ID/http/openmina2/10000 /$OPENMINA3_ID/http/openmina3/10000
                    /dns4/ocaml1/tcp/8302/p2p/12D3KooWKLzGWSdFAQGEAtrHan1TTwu7idagcZ83X6MXWfUJNiTU
          --snarker-exe-path cli/bin/snark-worker -v Debug --additional-ledgers-path test_ledgers

  - name: openmina2
    image: *snark-worker-image
    detach: true
    commands:
      - target/release/openmina node -p 10000 --run-snarker $OPENMINA2_SNARKER_KEY -s $OPENMINA2_SK
          --peers /dns4/replayer/tcp/8302/p2p/$REPLAYER_ID /$OPENMINA1_ID/http/openmina1/10000 /$OPENMINA3_ID/http/openmina3/10000
          --snarker-exe-path cli/bin/snark-worker -v Debug

  - name: test-bootstrap-replayer-to-openmina
    image: vladsimplestakingcom/bootstrap-rr:graphql
    pull: always
    commands:
      - sleep 180
      - RUST_LOG=debug timeout 3600s openmina-bootstrap-sandbox --path='/tmp/mina-record' test-graphql 234 http://openmina1:10000/graphql

  - name: openmina3
    image: *snark-worker-image
    detach: true
    commands:
      - target/release/openmina node -p 10000 --run-snarker $OPENMINA3_SNARKER_KEY -s $OPENMINA3_SK
          --peers /dns4/replayer/tcp/8302/p2p/$REPLAYER_ID /$OPENMINA1_ID/http/openmina1/10000 /$OPENMINA2_ID/http/openmina2/10000
          --snarker-exe-path cli/bin/snark-worker -v Debug

  - name: test-bootstrap-openmina-to-openmina
    image: vladsimplestakingcom/bootstrap-rr:graphql
    pull: always
    commands:
      - sleep 180
      - RUST_LOG=debug timeout 3600s openmina-bootstrap-sandbox --path='/tmp/mina-record' test-graphql 234 http://openmina3:10000/graphql

  # - name: test-bootstrap-openmina-to-mina
  #   image: vladsimplestakingcom/bootstrap-rr:graphql
  #   pull: always
  #   environment:
  #     RUST_LOG: debug
  #   commands:
  #     - apt-get update && apt-get install -y netcat
  #     - echo "ready" | netcat -q 1 ocaml1 9000
  #     - sleep 180
  #     - timeout 3600s openmina-bootstrap-sandbox --path='/tmp/mina-record' test-graphql 234 http://ocaml1:3085/graphql

  - name: test-snark-work
    image: alpine
    commands:
      - apk add curl jq
      - |
        c() {
           n=$$1
           path=$$2
           shift 2
           curl -s http://openmina$$n:10000/$$path "$$@"
        }
      - |
        assert() {
          eval $2 || {
            echo "[failed] $1: '$2'"
            exit 1
          }
        }
      - |
        TOTAL_WORK_TODO=$$(c 1 snark-pool/jobs | jq 'length')
        echo "TOTAL_WORK_TODO=$TOTAL_WORK_TODO"
        LOCAL_WORK=0
        for t in $(seq 10); do
          WORKERS=$$(c 1 snarker/workers | jq '[.[] | select(.status.kind != "None")] | length')
          assert 'active workers > 0' '[ $$WORKERS -gt 0 ]'

          COMMITMENTS_IN_PROGRESS=$$(c 1 snark-pool/jobs | jq "[.[] | select(.snark == null and .commitment.snarker == \"$OPENMINA1_SNARKER_KEY\")] | length")
          assert 'local commitments in progress fewer than local workers' '[ $$COMMITMENTS_IN_PROGRESS -le $$WORKERS ]'

          LW=$$(c 1 snark-pool/jobs | jq "[.[] | select(.snark.snarker == \"$OPENMINA1_SNARKER_KEY\")] | length")
          assert 'local snarks number do not decrease' '[ $$LOCAL_WORK -le $$LW ]'
          LOCAL_WORK=$$LW


          sleep 30
        done

        c 1 snark-pool/jobs > jobs.json

        assert 'local work exists' '[ $$LOCAL_WORK -gt 0 ]'

        TOTAL_WORK=$$(jq '[.[] | select(.snark != null)] | length' jobs.json)
        LOCAL_WORK=$$(jq "[.[] | select(.snark != null and .snark.snarker == \"$OPENMINA1_SNARKER_KEY\")] | length" jobs.json)
        NON_LOCAL_WORK=$$(jq "[.[] | select(.snark != null and .snark.snarker != \"$OPENMINA1_SNARKER_KEY\")] | length" jobs.json)
        echo "TOTAL_WORK=$$TOTAL_WORK"
        echo "LOCAL_WORK=$$LOCAL_WORK"
        echo "NON_LOCAL_WORK=$$NON_LOCAL_WORK"
        assert 'non-local work exists' '[ $$NON_LOCAL_WORK -gt 0 ]'

        TOTAL_COMMITMENTS=$$(jq "[.[] | select(.commitment != null)] | length" jobs.json)
        NON_LOCAL_COMMITMENTS=$$(jq "[.[] | select(.commitment != null and .commitment.commitment.snarker != \"$OPENMINA1_SNARKER_KEY\")] | length" jobs.json)
        echo "TOTAL_COMMITMENTS=$$TOTAL_COMMITMENTS"
        echo "NON_LOCAL_COMMITMENTS=$$NON_LOCAL_COMMITMENTS"
        assert 'non-local commintment exists' '[ $$NON_LOCAL_COMMITMENTS -gt 0 ]'

---
kind: pipeline
type: docker
name: build-pr-docker-image

trigger:
  branch:
    - feat/standalone_snark_worker
  events:
    - pull_request

steps:
  - name: submodules
    image: alpine/git
    environment:
      GITHUB_AUTH_TOKEN:
        from_secret: github_auth_token
    commands:
      - git config --global url."https://$${GITHUB_AUTH_TOKEN}:@github.com/".insteadOf "https://github.com/"
      - git config --global --add safe.directory /drone/src
      - git config --global --add safe.directory /drone/src/ledger
      - git config --global --add safe.directory /drone/src/mina-p2p-messages-rs
      - git config --global --add safe.directory /drone/src/deps/algebra
      - git config --global --add safe.directory /drone/src/deps/proof-systems
      - git config --global --add safe.directory /drone/src/deps/redux-rs
      - git submodule update --init --recursive
      - rm ~/.gitconfig

  - name: build-image-pr
    image: plugins/docker
    settings:
      build_args:
      - MINA_SNARK_WORKER_IMAGE=openmina/mina-snark-worker-proover:0.0.9
      username:
        from_secret: docker_hub_username
      password:
        from_secret: docker_hub_password
      repo: openmina/openmina
      tags:
      - ${DRONE_SOURCE_BRANCH//\//-}-${DRONE_COMMIT_SHA:0:8}
      - ${DRONE_SOURCE_BRANCH//\//-}-latest
    when:
      event:
        - pull_request

  - name: build-image
    image: plugins/docker
    settings:
      build_args:
      - MINA_SNARK_WORKER_TAG=0.0.9
      username:
        from_secret: docker_hub_username
      password:
        from_secret: docker_hub_password
      repo: openmina/openmina
      tags:
      - ${DRONE_COMMIT_SHA:0:8}
      - latest
    when:
      branch:
        - develop
      event:
        - push
