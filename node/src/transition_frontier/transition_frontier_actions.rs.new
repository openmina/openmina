//! Defines the actions that can be dispatched to modify the transition frontier state,
//! including genesis initialization, block candidate management, and synchronization.

use std::collections::BTreeSet;
use std::sync::Arc;

use mina_p2p_messages::v2::StateHash;
use openmina_core::block::ArcBlockWithHash;
use openmina_core::ActionEvent;
use serde::{Deserialize, Serialize};

use super::candidate::TransitionFrontierCandidateAction;
use super::genesis::TransitionFrontierGenesisAction;
use super::genesis_effectful::TransitionFrontierGenesisEffectfulAction;
use super::sync::{SyncError, TransitionFrontierSyncAction, TransitionFrontierSyncState};

pub type TransitionFrontierActionWithMeta = redux::ActionWithMeta<TransitionFrontierAction>;
pub type TransitionFrontierActionWithMetaRef<'a> =
    redux::ActionWithMeta<&'a TransitionFrontierAction>;

/// Actions that can be dispatched to the transition frontier component.
/// These actions trigger state changes through the reducer functions.
#[derive(derive_more::From, Serialize, Deserialize, Debug, Clone, ActionEvent)]
pub enum TransitionFrontierAction {
    Genesis(TransitionFrontierGenesisAction),
