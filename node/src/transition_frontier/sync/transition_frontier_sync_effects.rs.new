//! Implements side effects for transition frontier synchronization,
//! handling interactions with external services for fetching blocks,
//! validating them, and updating the ledger state.

use mina_p2p_messages::v2::LedgerHash;
use openmina_core::block::{AppliedBlock, ArcBlockWithHash};
use p2p::channels::rpc::{P2pChannelsRpcAction, P2pRpcId};
use p2p::{P2pNetworkPubsubAction, PeerId};
use redux::ActionMeta;

use crate::ledger::write::{LedgerWriteAction, LedgerWriteRequest, LedgersToKeep};
use crate::p2p::channels::rpc::P2pRpcRequest;
use crate::service::TransitionFrontierSyncLedgerSnarkedService;
use crate::{p2p_ready, Service, Store, TransitionFrontierAction};

use super::ledger::snarked::TransitionFrontierSyncLedgerSnarkedAction;
use super::ledger::staged::TransitionFrontierSyncLedgerStagedAction;
use super::ledger::{SyncLedgerTarget, TransitionFrontierSyncLedgerAction};
use super::{SyncError, TransitionFrontierSyncAction, TransitionFrontierSyncState};

impl TransitionFrontierSyncAction {
    /// Handles side effects for transition frontier synchronization actions.
    pub fn effects<S>(&self, meta: &ActionMeta, store: &mut Store<S>)
    where
        S: Service,
