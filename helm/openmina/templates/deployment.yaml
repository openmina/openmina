apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "openmina.fullname" . }}
  labels:
    {{- include "openmina.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "openmina.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "openmina.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "openmina.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: core-pattern
          image: alpine
          securityContext:
            privileged: true
          command: [ sh, -c ]
          args:
            - |
              [ -f /etc/sysctl.d/core_pattern.conf ] || {
                echo "kernel.core_pattern=/tmp/core.%e.%p" > /etc/sysctl.d/core_pattern.conf
                echo "/tmp/core.%e.%p" > /proc/sys/kernel/core_pattern
              }
          volumeMounts:
            - name: host-proc-sys-kernel
              mountPath: /proc
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          args:
          - "snarker"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          env:
          - name: "CHAIN_ID"
            value: "{{ .Values.openmina.chainId }}"
          - name: "PUBLIC_KEY"
            value: "{{ .Values.openmina.snarkerPublicKey }}"
          - name: "FEE"
            value: "{{ .Values.openmina.fee }}"
          - name: "MINA_EXE_PATH"
            value: "/usr/local/bin/snark-worker"
          - name: "VERBOSITY"
            value: "debug"
          {{- if .Values.openmina.peers }}
          - name: "PEERS"
            value: "{{ .Values.openmina.peers | join " " }}"
          {{- end }}
          {{- if .Values.openmina.secretKey }}
          - name: "OPENMINA_P2P_SEC_KEY"
            value: "{{ .Values.openmina.secretKey }}"
          {{- end}}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: host-tmp
              mountPath: /tmp
      volumes:
        - name: host-proc-sys-kernel
          hostPath: { path: "/proc" }
        - name: host-tmp
          hostPath: { path: "/tmp" }
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
